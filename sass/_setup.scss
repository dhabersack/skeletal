@import 'config.scss';

// Additional setup based on given configuration.

//--------------------------------//
// COLORS                         //
//--------------------------------//

// percentage amounts to adjust colors by
$amount-lightest: 25%;
$amount-lighter:  15%;
$amount-darker:   25%;
$amount-darkest:  50%;

$color-action-lightest:       lighten($color-action,       $amount-lightest);
$color-action-lighter:        lighten($color-action,       $amount-lighter);
$color-action-darker:          darken($color-action,       $amount-darker);
$color-action-darkest:         darken($color-action,       $amount-darkest);

$color-alert-lightest:        lighten($color-alert,        $amount-lightest);
$color-alert-lighter:         lighten($color-alert,        $amount-lighter);
$color-alert-darker:           darken($color-alert,        $amount-darker);
$color-alert-darkest:          darken($color-alert,        $amount-darkest);

$color-brand-lightest:        lighten($color-brand,        $amount-lightest);
$color-brand-lighter:         lighten($color-brand,        $amount-lighter);
$color-brand-darker:           darken($color-brand,        $amount-darker);
$color-brand-darkest:          darken($color-brand,        $amount-darkest);

$color-error-lightest:        lighten($color-error,        $amount-lightest);
$color-error-lighter:         lighten($color-error,        $amount-lighter);
$color-error-darker:           darken($color-error,        $amount-darker);
$color-error-darkest:          darken($color-error,        $amount-darkest);

$color-highlight-lightest:    lighten($color-highlight,    $amount-lightest);
$color-highlight-lighter:     lighten($color-highlight,    $amount-lighter);
$color-highlight-darker:       darken($color-highlight,    $amount-darker);
$color-highlight-darkest:      darken($color-highlight,    $amount-darkest);

$color-link-lightest:         lighten($color-link,         $amount-lightest);
$color-link-lighter:          lighten($color-link,         $amount-lighter);
$color-link-darker:            darken($color-link,         $amount-darker);
$color-link-darkest:           darken($color-link,         $amount-darkest);

$color-link-visited-lightest: lighten($color-link-visited, $amount-lightest);
$color-link-visited-lighter:  lighten($color-link-visited, $amount-lighter);
$color-link-visited-darker:    darken($color-link-visited, $amount-darker);
$color-link-visited-darkest:   darken($color-link-visited, $amount-darkest);

$color-neutral-lightest:      lighten($color-neutral,      $amount-lightest);
$color-neutral-lighter:       lighten($color-neutral,      $amount-lighter);
$color-neutral-darker:         darken($color-neutral,      $amount-darker);
$color-neutral-darkest:        darken($color-neutral,      $amount-darkest);


//--------------------------------//
// RESPONSIVE GRID                //
//--------------------------------//

// breakpoints used in media queries
$breakpoint-smartphone:             0em;
$breakpoint-smartphone-to-tablet:  48em;
$breakpoint-portrait-tablet:       72em;
$breakpoint-default:               96em;
$breakpoint-large-display:        120em;

// proportion of full column-width that is taken up by content or gutter
$content-to-column-ratio: 0.8;
$gutter-to-column-ratio:  1 - $content-to-column-ratio;

// widths used in responsive grid at different stages
$grid-smartphone-column-width: 98%;
$grid-smartphone-gutter-width: 2%;

$grid-smartphone-to-tablet-column-width: ($breakpoint-smartphone-to-tablet / $number-of-grid-columns) * $content-to-column-ratio;
$grid-smartphone-to-tablet-gutter-width: ($breakpoint-smartphone-to-tablet / $number-of-grid-columns) * $gutter-to-column-ratio;

$grid-portrait-tablet-column-width:      ($breakpoint-portrait-tablet      / $number-of-grid-columns) * $content-to-column-ratio;
$grid-portrait-tablet-gutter-width:      ($breakpoint-portrait-tablet      / $number-of-grid-columns) * $gutter-to-column-ratio;

$grid-default-column-width:              ($breakpoint-default              / $number-of-grid-columns) * $content-to-column-ratio;
$grid-default-gutter-width:              ($breakpoint-default              / $number-of-grid-columns) * $gutter-to-column-ratio;

$grid-large-display-column-width:        ($breakpoint-large-display        / $number-of-grid-columns) * $content-to-column-ratio;
$grid-large-display-gutter-width:        ($breakpoint-large-display        / $number-of-grid-columns) * $gutter-to-column-ratio;

// Using the default values, the following sizes are used in the grid:
//
//                ||      12 columns      ||      16 columns      |
//    breakpoint  ||  content  |  gutter  ||  content  |  gutter  |
// ---------------++-----------+----------++-----------+----------+
//         480px  ||     32px  |     8px  ||     24px  |     6px  |
//         720px  ||     48px  |    12px  ||     36px  |     9px  |
//         960px  ||     64px  |    16px  ||     48px  |    12px  |
//        1200px  ||     80px  |    20px  ||     60px  |    15px  |

// minimum widths are pixel-values based on the breakpoints set above
$min-width-smartphone-to-tablet: $breakpoint-smartphone-to-tablet / 1em * 10px;
$min-width-portrait-tablet:      $breakpoint-portrait-tablet      / 1em * 10px;
$min-width-default:              $breakpoint-default              / 1em * 10px;
$min-width-large-display:        $breakpoint-large-display        / 1em * 10px;

// maximum widths are based on minimum widths of their successing breakpoints
$max-width-smartphone:           $min-width-smartphone-to-tablet - 1px;
$max-width-smartphone-to-tablet: $min-width-portrait-tablet      - 1px;
$max-width-portrait-tablet:      $min-width-default              - 1px;
$max-width-default:              $min-width-large-display        - 1px;

// actual media queries to be used in @media-directives
$media-query-smartphone:                                                                 'max-width: #{ $max-width-smartphone           }';
$media-query-smartphone-to-tablet: 'min-width: #{ $min-width-smartphone-to-tablet }) and (max-width: #{ $max-width-smartphone-to-tablet }';
$media-query-portrait-tablet:      'min-width: #{ $min-width-portrait-tablet      }) and (max-width: #{ $max-width-portrait-tablet      }';
$media-query-default:              'min-width: #{ $min-width-default              }) and (max-width: #{ $max-width-default              }';
$media-query-large-display:        'min-width: #{ $min-width-large-display        }';
